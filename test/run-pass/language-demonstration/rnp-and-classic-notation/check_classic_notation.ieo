export (check_classic_notation)

import utility:bal

# check if expressions in classic notation made with (,),+,*,a,b,c are correct

fun check_classic_notation(input) {
    Expression(input);
}

# Expression = Component "+" Expression | Component
fun Expression(inn) {
    # first_case
    position = bal("+", inn, "(", ")");
    if (position) {
        return Component(cut(0, position, inn))
            and Expression(cut(position + 1, len(inn), inn));
    }

    # second_case
    Component(inn);
}

# Component = Factor "*" Component | Factor
fun Component(inn) {
    # first_case
    position = bal("*", inn, "(", ")");
    if (position) {
        return Factor(cut(0, position, inn))
            and Component(cut(position + 1, len(inn), inn));
    }

    # second_case
    Factor(inn);
}

# Factor = Identity | "(" Expression ")"
fun Factor(inn) {
    len = len(inn);

    #first_case
    if(len == 1) { return Identity(inn); }

    #second_case
    return cut(0, 1, inn) == "("
        and Expression(cut(position + 1, len - 1, inn))
        and (cut(len - 1, len, inn) == ")");
}

# Identity = "a" | "b" | "c"
fun Identity(inn)  {
	if(inn == "a" or inn == "b" or inn == "c") { return succ none }
    fail none;
}
